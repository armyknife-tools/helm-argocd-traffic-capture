{{- if .Values.proxy.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "traffic-capture.fullname" . }}-proxy
  labels:
    {{- include "traffic-capture.proxyLabels" . | nindent 4 }}
spec:
  replicas: {{ .Values.proxy.replicaCount }}
  selector:
    matchLabels:
      {{- include "traffic-capture.selectorLabels" . | nindent 6 }}
      app: passthrough-proxy
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "{{ .Values.proxy.istioSidecar.inject }}"
        checksum/config: {{ include (print $.Template.BasePath "/configmap-proxy-config.yaml") . | sha256sum }}
        checksum/code: {{ include (print $.Template.BasePath "/configmap-proxy-code.yaml") . | sha256sum }}
      labels:
        {{- include "traffic-capture.selectorLabels" . | nindent 8 }}
        app: passthrough-proxy
        sidecar.istio.io/inject: "{{ .Values.proxy.istioSidecar.inject }}"
    spec:
      serviceAccountName: {{ include "traffic-capture.serviceAccountName" . }}-proxy
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
      - name: proxy
        securityContext:
          {{- toYaml .Values.securityContext | nindent 10 }}
        image: "{{ .Values.proxy.image.repository }}:{{ .Values.proxy.image.tag }}"
        imagePullPolicy: {{ .Values.proxy.image.pullPolicy }}
        command:
        - /bin/sh
        - -c
        - cp /config/server.js /tmp/server.js && cd /tmp && node server.js
        ports:
        - name: proxy
          containerPort: {{ .Values.proxy.service.port }}
          protocol: TCP
        - name: health
          containerPort: {{ .Values.proxy.service.healthPort }}
          protocol: TCP
        env:
        - name: SAMPLING_RATE
          valueFrom:
            configMapKeyRef:
              name: {{ include "traffic-capture.fullname" . }}-proxy-config
              key: sampling_rate
        - name: COLLECTOR_URL
          valueFrom:
            configMapKeyRef:
              name: {{ include "traffic-capture.fullname" . }}-proxy-config
              key: collector_url
        - name: MAX_BODY_SIZE
          valueFrom:
            configMapKeyRef:
              name: {{ include "traffic-capture.fullname" . }}-proxy-config
              key: max_body_size
        - name: MASK_SENSITIVE_DATA
          valueFrom:
            configMapKeyRef:
              name: {{ include "traffic-capture.fullname" . }}-proxy-config
              key: mask_sensitive_data
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        livenessProbe:
          httpGet:
            path: /healthz
            port: health
          initialDelaySeconds: 10
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /healthz
            port: health
          initialDelaySeconds: 5
          periodSeconds: 5
        resources:
          {{- toYaml .Values.proxy.resources | nindent 10 }}
        volumeMounts:
        - name: proxy-code
          mountPath: /config
          readOnly: true
      volumes:
      - name: proxy-code
        configMap:
          name: {{ include "traffic-capture.fullname" . }}-proxy-code
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }}